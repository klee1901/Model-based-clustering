# Run Gibbs
foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
print(results[sampleNum]$results$sample[1])
results[sampleNum]$results$outGibbs <- gibbsNIG(results[sampleNum]$results$sample)
}
results[1][['sample']][1]
results[1][['sample']][1:5]
results[1]$results[['sample']][1:5]
is.atomic(results)
is.atomic(results[1])
is.atomic(results[1]$results)
is.atomic(results[1]$results$sample)
# Run Gibbs
foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
#results[sampleNum]$results$outGibbs <- gibbsNIG(results[sampleNum]$results$sample)
gibbsNIG(results[sampleNum]$results$sample)
}
# Run Gibbs
foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
#results[sampleNum]$results$outGibbs <- gibbsNIG(results[sampleNum]$results$sample)
gibbsNIG(results[sampleNum]$results[['sample']])
}
is.atomic(results[2])
is.atomic(results[3])
is.atomic(results[4])
is.atomic(results[5])
is.atomic(results[2]$results)
# Run Gibbs
foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
#results[sampleNum]$results$outGibbs <- gibbsNIG(results[sampleNum]$results$sample)
gibbsNIG(results[sampleNum][['sample']])
}
# Run Gibbs
foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
#results[sampleNum]$results$outGibbs <- gibbsNIG(results[sampleNum]$results$sample)
results[sampleNum][['sample']]
}
#results[sampleNum]$results$outGibbs <- gibbsNIG(results[sampleNum]$results$sample)
results[sampleNum]$results[['sample']]
# Run Gibbs
foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
#results[sampleNum]$results$outGibbs <- gibbsNIG(results[sampleNum]$results$sample)
results[sampleNum]$results[['sample']]
}
# Run Gibbs
foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
#results[sampleNum]$results$outGibbs <- gibbsNIG(results[sampleNum]$results$sample)
results[sampleNum]$results$sample
}
# Run Gibbs
foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
#results[sampleNum]$results$outGibbs <- gibbsNIG(results[sampleNum]$results$sample)
results[sampleNum]$results$outGibbs <- results[sampleNum]$results$sample
}
results
# Run Gibbs
results <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
#results[sampleNum]$results$outGibbs <- gibbsNIG(results[sampleNum]$results$sample)
results[sampleNum]$results$outGibbs <- results[sampleNum]$results$sample
results[sampleNum]
}
# Run Gibbs
results <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
#results[sampleNum]$results$outGibbs <- gibbsNIG(results[sampleNum]$results$sample)
results[sampleNum]$results$outGibbs <- gibbsNIG(results[sampleNum]$results$sample)
results[sampleNum]
}
# Run Gibbs
results <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
#results[sampleNum]$results$outGibbs <- gibbsNIG(results[sampleNum]$results$sample)
results[sampleNum]$results$outGibbs <- sum(results[sampleNum]$results$sample)
results[sampleNum]
}
#results[sampleNum]$results$outGibbs <- gibbsNIG(results[sampleNum]$results$sample)
results[sampleNum]$results$outGibbs <- gibbsNIG(c(1))
gibbsNIG(c(1))
# Create samples
results <- sapply(1:numOfSamples,function(samNum){list('sample'=gaussian2Sample(N))})
# Run Gibbs
results <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
results[sampleNum]$outGibbs <- gibbsNIG(results[sampleNum]$sample)
results[sampleNum]
}
# Run Gibbs
results <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
results[sampleNum]$outGibbs <- 'a'
results[sampleNum]
}
# Run Gibbs
others <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
results[sampleNum]$outGibbs <- 'a'
results[sampleNum]
}
results[1]$out <- 'a'
results[1]
# Create samples
results <- sapply(1:numOfSamples,function(samNum){list('sample'=gaussian2Sample(N),'outGibbs'='')})
# Run Gibbs
others <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
results[sampleNum]$outGibbs <- 'a'
results[sampleNum]
}
# Create samples
results <- sapply(1:numOfSamples,function(samNum){list('sample'=gaussian2Sample(N),'outGibbs'='')})
results[1]$sample
# Create samples
results <- sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'outGibbs'=''))})
results[1]$res$outGibbs <- 'a'
results[2]$res$outGibbs <- 'b'
# Run Gibbs
others <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
results[sampleNum]$res$outGibbs <- 'a'
results[sampleNum]
}
# Run Gibbs
results <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
results[sampleNum]$res$outGibbs <- 'a'
results[sampleNum]
}
# Run Gibbs
results <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$outGibbs <- gibbsNIG(results[sampleNum]$sample)
end <- Sys.time()
results[sampleNum]$outGibbs <- c(results[sampleNum]$outGibbs,'time'=end-start)
results[sampleNum]
}
t1 <- Sys.time()
t2 <- Sys.time()
t2-t1
# Run Gibbs
results <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$outGibbs <- gibbsNIG(results[sampleNum]$sample)
end <- Sys.time()
results[sampleNum]$outGibbs <- c(results[sampleNum]$outGibbs,'time'=c(end-start))
results[sampleNum]
}
# Run Gibbs
results <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$outGibbs <- gibbsNIG(results[sampleNum]$sample)
end <- Sys.time()
results[sampleNum]$outGibbs <- c(results[sampleNum]$outGibbs,'time'=5)
results[sampleNum]
}
# Run Gibbs
results <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$outGibbs <- gibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$outGibbs <- c(results[sampleNum]$res$outGibbs,'time'=end-start)
results[sampleNum]
}
# Create samples
results <- sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'outGibbs'='','outCgibbs'='','outABC'=''))})
numOfSamples <- 25
# Create samples
results <- sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'outGibbs'='','outCgibbs'='','outABC'=''))})
timestamp()
##------ Fri Mar 10 21:30:10 2023 ------##
results <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$outGibbs <- gibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$outGibbs <- c(results[sampleNum]$res$outGibbs,'time'=end-start)
results[sampleNum]
}
timestamp()
##------ Fri Mar 10 22:18:26 2023 ------##
timesL <- sapply(1:25,function(i){results[i]$res$outGibbs$time})
boxplot(timesL)
timesL[1]
numOfSamples <- 6
# Create samples
results <- sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'gibbs'='','cGibbs'='','ABC'=''))})
timestamp()
##------ Fri Mar 10 22:26:19 2023 ------##
results <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$gibbs <- gibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$gibbs <- c(results[sampleNum]$res$gibbs,'time'=end-start)
results[sampleNum]
}
timestamp()
##------ Fri Mar 10 22:38:54 2023 ------##
save(results,file="compOne.Rdata")
timestamp()
##------ Fri Mar 10 22:48:53 2023 ------##
results <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$cGibbs <- collapsedGibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$cGibbs <- c(results[sampleNum]$res$cGibbs,'time'=end-start)
results[sampleNum]
}
timestamp()
##------ Fri Mar 10 23:51:17 2023 ------##
save(results,file="compOne.Rdata")
# Reload data
load("compOne.Rdata")
# Create break point
breakP <- floor(numOfSamples/2)
N <- 1000
numOfSamples <- 6
# Create break point
breakP <- floor(numOfSamples/2)
timestamp()
##------ Sat Mar 11 15:15:27 2023 ------##
results <- foreach(sampleNum = 1:breakP, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$ABC <- collapsedGibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$ABC <- c(results[sampleNum]$res$ABC,'time'=end-start)
results[sampleNum]
}
library(doParallel)
# set-up
cl <- makeCluster(3)
registerDoParallel(cl)
timestamp()
##------ Sat Mar 11 15:15:41 2023 ------##
results <- foreach(sampleNum = 1:breakP, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$ABC <- collapsedGibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$ABC <- c(results[sampleNum]$res$ABC,'time'=end-start)
results[sampleNum]
}
source('VItwoPartitions.r')
source('MCMC_ABC.r')
timestamp()
##------ Sat Mar 11 15:17:20 2023 ------##
results <- foreach(sampleNum = 1:breakP, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$ABC <- MCMC_ABC_NIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$ABC <- c(results[sampleNum]$res$ABC,'time'=end-start)
results[sampleNum]
}
timestamp()
##------ Sat Mar 11 15:33:15 2023 ------##
save(results,file="compOne.Rdata")
source("~/GitHub/Model-based-clustering/plotVIoutput.R", echo=TRUE)
source("~/GitHub/Model-based-clustering/plotVIoutput.R", echo=TRUE)
results[1:2]
str(results[1:2])
# Create samples
results <- sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'gibbs'='','cGibbs'='','ABC'=''))})
source('createSample.r')
source('gibbsNIG.r')
# Create samples
results <- sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'gibbs'='','cGibbs'='','ABC'=''))})
timestamp()
##------ Sat Mar 11 15:50:03 2023 ------##
results <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$gibbs <- gibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$gibbs <- c(results[sampleNum]$res$gibbs,'time'=end-start)
results[sampleNum]
}
timestamp()
##------ Sat Mar 11 15:56:43 2023 ------##
timestamp()
##------ Sat Mar 11 16:09:36 2023 ------##
results <- c(foreach(sampleNum = 1:breakP, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$ABC <- MCMC_ABC_NIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$ABC <- c(results[sampleNum]$res$ABC,'time'=end-start)
results[sampleNum]
},results[(breakP+1):numOfSamples])
timestamp()
##------ Sat Mar 11 16:23:36 2023 ------##
save(results,file="compOne.Rdata")
# Part 2
load("compOne.Rdata")
source('MCMC_ABC.r')
timestamp()
##------ Sat Mar 11 16:32:24 2023 ------##
results <- c(results[1:breakP],foreach(sampleNum = (breakP+1):numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$ABC <- MCMC_ABC_NIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$ABC <- c(results[sampleNum]$res$ABC,'time'=end-start)
results[sampleNum]
})
numOfSamples <- 6
# Create break point
breakP <- floor(numOfSamples/2)
timestamp()
##------ Sat Mar 11 16:32:56 2023 ------##
results <- c(results[1:breakP],foreach(sampleNum = (breakP+1):numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$ABC <- MCMC_ABC_NIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$ABC <- c(results[sampleNum]$res$ABC,'time'=end-start)
results[sampleNum]
})
timestamp()
##------ Sat Mar 11 16:47:42 2023 ------##
timestamp()
##------ Sat Mar 11 17:10:34 2023 ------##
results <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$cGibbs <- collapsedGibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$cGibbs <- c(results[sampleNum]$res$cGibbs,'time'=end-start)
results[sampleNum]
}
source('collapsedGibbsNIG.r')
source('VItwoPartitions.r')
timestamp()
##------ Sat Mar 11 17:10:59 2023 ------##
results <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$cGibbs <- collapsedGibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$cGibbs <- c(results[sampleNum]$res$cGibbs,'time'=end-start)
results[sampleNum]
}
timestamp()
##------ Sat Mar 11 17:46:43 2023 ------##
source("~/GitHub/Model-based-clustering/plotVIoutput.R", echo=TRUE)
for (result in results) {
print("Result")
print(sprintf("Gibbs ESS: %f",effectiveSize(as.vector(result$res$gibbs$entropies))))
print(sprintf("Gibbs VI: %f",VItwoPartitions(result$res$sample$clustLabels,result$res$gibbs$bestPartition$cl)))
print(sprintf("Collapsed gibbs ESS: %f",effectiveSize(as.vector(result$res$cGibbs$entropies))))
print(sprintf("Collapsed gibbs VI: %f",VItwoPartitions(result$sample$res$clustLabels,result$res$cGibbs$bestPartition$cl)))
print(sprintf("MCMC-ABC ESS: %f",effectiveSize(as.vector(result$res$ABC$entropies))))
print(sprintf("MCMC-ABC VI: %f",VItwoPartitions(result$res$sample$clustLabels,result$res$ABC$bestPartition$cl)))
}
str(result)
for (result in results) {
print("Result")
print(sprintf("Gibbs ESS: %f",effectiveSize(as.vector(result$gibbs$entropies))))
print(sprintf("Gibbs VI: %f",VItwoPartitions(result$sample$clustLabels,result$gibbs$bestPartition$cl)))
print(sprintf("Collapsed gibbs ESS: %f",effectiveSize(as.vector(result$cGibbs$entropies))))
print(sprintf("Collapsed gibbs VI: %f",VItwoPartitions(result$sample$clustLabels,result$cGibbs$bestPartition$cl)))
print(sprintf("MCMC-ABC ESS: %f",effectiveSize(as.vector(result$ABC$entropies))))
print(sprintf("MCMC-ABC VI: %f",VItwoPartitions(result$sample$clustLabels,result$ABC$bestPartition$cl)))
}
save(results,file="compOne.Rdata")
# Create samples
results <- c(results,sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'gibbs'='','cGibbs'='','ABC'=''))}))
source('createSample.r')
source('gibbsNIG.r')
# Create samples
results <- c(results,sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'gibbs'='','cGibbs'='','ABC'=''))}))
N <- 1000
# Create samples
results <- c(results,sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'gibbs'='','cGibbs'='','ABC'=''))}))
numOfSamples <- 18
# Create samples
results <- c(results,sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'gibbs'='','cGibbs'='','ABC'=''))}))
timestamp()
##------ Sat Mar 11 19:21:35 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(numOfSamples+skip), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$gibbs <- gibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$gibbs <- c(results[sampleNum]$res$gibbs,'time'=end-start)
results[sampleNum]
})
# adjust
skip <- 6 #already processed samples
timestamp()
##------ Sat Mar 11 19:21:47 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(numOfSamples+skip), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$gibbs <- gibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$gibbs <- c(results[sampleNum]$res$gibbs,'time'=end-start)
results[sampleNum]
})
timestamp()
##------ Sat Mar 11 19:40:44 2023 ------##
numOfSamples <- 6
# adjust
skip <- 24 #already processed samples
timestamp()
##------ Sat Mar 11 19:41:22 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(numOfSamples+skip), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$gibbs <- gibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$gibbs <- c(results[sampleNum]$res$gibbs,'time'=end-start)
results[sampleNum]
})
for (i in 1:30) {print(results[i]$sample$sample[1])}
for (i in 1:30) {print(results[i]$res$sample$sample[1])}
# Create samples
results <- c(results[1:24],sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'gibbs'='','cGibbs'='','ABC'=''))}))
for (i in 1:30) {print(results[i]$res$sample$sample[1])}
timestamp()
##------ Sat Mar 11 19:45:08 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(numOfSamples+skip), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$gibbs <- gibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$gibbs <- c(results[sampleNum]$res$gibbs,'time'=end-start)
results[sampleNum]
})
timestamp()
##------ Sat Mar 11 19:51:32 2023 ------##
for (i in 1:30) {print(typeof(results[i]$res$cGibbs))}
numOfSamples <- 24
# adjust
skip <- 6 #already processed samples
timestamp()
##------ Sat Mar 11 19:59:49 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(numOfSamples+skip), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$cGibbs <- collapsedGibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$cGibbs <- c(results[sampleNum]$res$cGibbs,'time'=end-start)
results[sampleNum]
})
timestamp()
##------ Sat Mar 11 23:35:05 2023 ------##
save(results,file="compOne.Rdata")
# Reload data
load("compOne.Rdata")
for (i in 1:30) {typeof(results[i]$res$gibbs)}
for (i in 1:30) {print(typeof(results[i]$res$gibbs))}
for (i in 1:30) {print(typeof(results[i]$res$cGibbs))}
for (i in 1:30) {print(typeof(results[i]$res$ABC))}
N <- 1000
numOfSamples <- 24
# adjust
skip <- 6 #already processed samples
# Create break point
breakP <- floor(numOfSamples/2)
timestamp()
##------ Sun Mar 12 20:55:07 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(skip+breakP), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$ABC <- MCMC_ABC_NIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$ABC <- c(results[sampleNum]$res$ABC,'time'=end-start)
results[sampleNum]
},results[(skip+breakP+1):numOfSamples])
library(doParallel)
# set-up
cl <- makeCluster(3)
registerDoParallel(cl)
timestamp()
##------ Sun Mar 12 20:55:18 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(skip+breakP), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$ABC <- MCMC_ABC_NIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$ABC <- c(results[sampleNum]$res$ABC,'time'=end-start)
results[sampleNum]
},results[(skip+breakP+1):numOfSamples])
source('MCMC_ABC.r')
timestamp()
##------ Sun Mar 12 20:55:32 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(skip+breakP), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$ABC <- MCMC_ABC_NIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$ABC <- c(results[sampleNum]$res$ABC,'time'=end-start)
results[sampleNum]
},results[(skip+breakP+1):numOfSamples])
timestamp()
##------ Sun Mar 12 22:54:08 2023 ------##
for (i in 1:30) {print(typeof(results[i]$res$ABC))}
for (i in 1:30) {print(typeof(results[i]$res$gibbs))}
save(results,file="compOne.Rdata")
str(results[25])
numOfSamples <- 6
# adjust
skip <- 24 #already processed samples
# Create samples
results <- c(results[1:skip],sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'gibbs'='','cGibbs'='','ABC'=''))}))
source('createSample.r')
# Create samples
results <- c(results[1:skip],sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'gibbs'='','cGibbs'='','ABC'=''))}))
for (i in 1:30) {print(typeof(results[i]$res$gibbs))}
for (i in 1:30) {print(typeof(results[i]$res$ABC))}
save(results,file="compOne.Rdata")
timestamp()
##------ Sun Mar 12 23:44:30 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(numOfSamples+skip), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$gibbs <- gibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$gibbs <- c(results[sampleNum]$res$gibbs,'time'=end-start)
results[sampleNum]
})
source('gibbsNIG.r')
timestamp()
##------ Sun Mar 12 23:44:40 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(numOfSamples+skip), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$gibbs <- gibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$gibbs <- c(results[sampleNum]$res$gibbs,'time'=end-start)
results[sampleNum]
})
timestamp()
##------ Sun Mar 12 23:51:46 2023 ------##
save(results,file="compOne.Rdata")
for (i in 1:30) {print(typeof(results[i]$res$gibbs))}
for (i in 1:30) {print(typeof(results[i]$res$cGibbs))}
for (i in 1:30) {print(typeof(results[i]$res$ABC))}
# end
stopCluster(cl)
