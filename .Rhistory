start <- Sys.time()
results[sampleNum]$res$ABC <- MCMC_ABC_NIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$ABC <- c(results[sampleNum]$res$ABC,'time'=end-start)
results[sampleNum]
})
numOfSamples <- 6
# Create break point
breakP <- floor(numOfSamples/2)
timestamp()
##------ Sat Mar 11 16:32:56 2023 ------##
results <- c(results[1:breakP],foreach(sampleNum = (breakP+1):numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$ABC <- MCMC_ABC_NIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$ABC <- c(results[sampleNum]$res$ABC,'time'=end-start)
results[sampleNum]
})
timestamp()
##------ Sat Mar 11 16:47:42 2023 ------##
timestamp()
##------ Sat Mar 11 17:10:34 2023 ------##
results <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$cGibbs <- collapsedGibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$cGibbs <- c(results[sampleNum]$res$cGibbs,'time'=end-start)
results[sampleNum]
}
source('collapsedGibbsNIG.r')
source('VItwoPartitions.r')
timestamp()
##------ Sat Mar 11 17:10:59 2023 ------##
results <- foreach(sampleNum = 1:numOfSamples, .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$cGibbs <- collapsedGibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$cGibbs <- c(results[sampleNum]$res$cGibbs,'time'=end-start)
results[sampleNum]
}
timestamp()
##------ Sat Mar 11 17:46:43 2023 ------##
source("~/GitHub/Model-based-clustering/plotVIoutput.R", echo=TRUE)
for (result in results) {
print("Result")
print(sprintf("Gibbs ESS: %f",effectiveSize(as.vector(result$res$gibbs$entropies))))
print(sprintf("Gibbs VI: %f",VItwoPartitions(result$res$sample$clustLabels,result$res$gibbs$bestPartition$cl)))
print(sprintf("Collapsed gibbs ESS: %f",effectiveSize(as.vector(result$res$cGibbs$entropies))))
print(sprintf("Collapsed gibbs VI: %f",VItwoPartitions(result$sample$res$clustLabels,result$res$cGibbs$bestPartition$cl)))
print(sprintf("MCMC-ABC ESS: %f",effectiveSize(as.vector(result$res$ABC$entropies))))
print(sprintf("MCMC-ABC VI: %f",VItwoPartitions(result$res$sample$clustLabels,result$res$ABC$bestPartition$cl)))
}
str(result)
for (result in results) {
print("Result")
print(sprintf("Gibbs ESS: %f",effectiveSize(as.vector(result$gibbs$entropies))))
print(sprintf("Gibbs VI: %f",VItwoPartitions(result$sample$clustLabels,result$gibbs$bestPartition$cl)))
print(sprintf("Collapsed gibbs ESS: %f",effectiveSize(as.vector(result$cGibbs$entropies))))
print(sprintf("Collapsed gibbs VI: %f",VItwoPartitions(result$sample$clustLabels,result$cGibbs$bestPartition$cl)))
print(sprintf("MCMC-ABC ESS: %f",effectiveSize(as.vector(result$ABC$entropies))))
print(sprintf("MCMC-ABC VI: %f",VItwoPartitions(result$sample$clustLabels,result$ABC$bestPartition$cl)))
}
save(results,file="compOne.Rdata")
# Create samples
results <- c(results,sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'gibbs'='','cGibbs'='','ABC'=''))}))
source('createSample.r')
source('gibbsNIG.r')
# Create samples
results <- c(results,sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'gibbs'='','cGibbs'='','ABC'=''))}))
N <- 1000
# Create samples
results <- c(results,sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'gibbs'='','cGibbs'='','ABC'=''))}))
numOfSamples <- 18
# Create samples
results <- c(results,sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'gibbs'='','cGibbs'='','ABC'=''))}))
timestamp()
##------ Sat Mar 11 19:21:35 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(numOfSamples+skip), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$gibbs <- gibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$gibbs <- c(results[sampleNum]$res$gibbs,'time'=end-start)
results[sampleNum]
})
# adjust
skip <- 6 #already processed samples
timestamp()
##------ Sat Mar 11 19:21:47 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(numOfSamples+skip), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$gibbs <- gibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$gibbs <- c(results[sampleNum]$res$gibbs,'time'=end-start)
results[sampleNum]
})
timestamp()
##------ Sat Mar 11 19:40:44 2023 ------##
numOfSamples <- 6
# adjust
skip <- 24 #already processed samples
timestamp()
##------ Sat Mar 11 19:41:22 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(numOfSamples+skip), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$gibbs <- gibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$gibbs <- c(results[sampleNum]$res$gibbs,'time'=end-start)
results[sampleNum]
})
for (i in 1:30) {print(results[i]$sample$sample[1])}
for (i in 1:30) {print(results[i]$res$sample$sample[1])}
# Create samples
results <- c(results[1:24],sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'gibbs'='','cGibbs'='','ABC'=''))}))
for (i in 1:30) {print(results[i]$res$sample$sample[1])}
timestamp()
##------ Sat Mar 11 19:45:08 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(numOfSamples+skip), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$gibbs <- gibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$gibbs <- c(results[sampleNum]$res$gibbs,'time'=end-start)
results[sampleNum]
})
timestamp()
##------ Sat Mar 11 19:51:32 2023 ------##
for (i in 1:30) {print(typeof(results[i]$res$cGibbs))}
numOfSamples <- 24
# adjust
skip <- 6 #already processed samples
timestamp()
##------ Sat Mar 11 19:59:49 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(numOfSamples+skip), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$cGibbs <- collapsedGibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$cGibbs <- c(results[sampleNum]$res$cGibbs,'time'=end-start)
results[sampleNum]
})
timestamp()
##------ Sat Mar 11 23:35:05 2023 ------##
save(results,file="compOne.Rdata")
# Reload data
load("compOne.Rdata")
for (i in 1:30) {typeof(results[i]$res$gibbs)}
for (i in 1:30) {print(typeof(results[i]$res$gibbs))}
for (i in 1:30) {print(typeof(results[i]$res$cGibbs))}
for (i in 1:30) {print(typeof(results[i]$res$ABC))}
N <- 1000
numOfSamples <- 24
# adjust
skip <- 6 #already processed samples
# Create break point
breakP <- floor(numOfSamples/2)
timestamp()
##------ Sun Mar 12 20:55:07 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(skip+breakP), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$ABC <- MCMC_ABC_NIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$ABC <- c(results[sampleNum]$res$ABC,'time'=end-start)
results[sampleNum]
},results[(skip+breakP+1):numOfSamples])
library(doParallel)
# set-up
cl <- makeCluster(3)
registerDoParallel(cl)
timestamp()
##------ Sun Mar 12 20:55:18 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(skip+breakP), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$ABC <- MCMC_ABC_NIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$ABC <- c(results[sampleNum]$res$ABC,'time'=end-start)
results[sampleNum]
},results[(skip+breakP+1):numOfSamples])
source('MCMC_ABC.r')
timestamp()
##------ Sun Mar 12 20:55:32 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(skip+breakP), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$ABC <- MCMC_ABC_NIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$ABC <- c(results[sampleNum]$res$ABC,'time'=end-start)
results[sampleNum]
},results[(skip+breakP+1):numOfSamples])
timestamp()
##------ Sun Mar 12 22:54:08 2023 ------##
for (i in 1:30) {print(typeof(results[i]$res$ABC))}
for (i in 1:30) {print(typeof(results[i]$res$gibbs))}
save(results,file="compOne.Rdata")
str(results[25])
numOfSamples <- 6
# adjust
skip <- 24 #already processed samples
# Create samples
results <- c(results[1:skip],sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'gibbs'='','cGibbs'='','ABC'=''))}))
source('createSample.r')
# Create samples
results <- c(results[1:skip],sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'gibbs'='','cGibbs'='','ABC'=''))}))
for (i in 1:30) {print(typeof(results[i]$res$gibbs))}
for (i in 1:30) {print(typeof(results[i]$res$ABC))}
save(results,file="compOne.Rdata")
timestamp()
##------ Sun Mar 12 23:44:30 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(numOfSamples+skip), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$gibbs <- gibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$gibbs <- c(results[sampleNum]$res$gibbs,'time'=end-start)
results[sampleNum]
})
source('gibbsNIG.r')
timestamp()
##------ Sun Mar 12 23:44:40 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(numOfSamples+skip), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$gibbs <- gibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$gibbs <- c(results[sampleNum]$res$gibbs,'time'=end-start)
results[sampleNum]
})
timestamp()
##------ Sun Mar 12 23:51:46 2023 ------##
save(results,file="compOne.Rdata")
for (i in 1:30) {print(typeof(results[i]$res$gibbs))}
for (i in 1:30) {print(typeof(results[i]$res$cGibbs))}
for (i in 1:30) {print(typeof(results[i]$res$ABC))}
# end
stopCluster(cl)
# Reload data
load("compOne.Rdata")
for (i in 1:30) {print(typeof(results[i]$res$cGibbs))}
for (i in 1:30) {print(typeof(results[i]$res$ABC))}
source('MCMC_ABC.r')
library(doParallel)
# set-up
cl <- makeCluster(3)
registerDoParallel(cl)
breakP <- 0
skip <- 18
numOfSamples <- 12
timestamp()
##------ Mon Mar 13 13:06:20 2023 ------##
results <- c(results[1:(skip+breakP)],foreach(sampleNum = (skip+breakP+1):(skip+breakP+numOfSamples), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$ABC <- MCMC_ABC_NIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$ABC <- c(results[sampleNum]$res$ABC,'time'=end-start)
results[sampleNum]
})
timestamp()
##------ Mon Mar 13 14:18:07 2023 ------##
for (i in 1:30) {print(typeof(results[i]$res$ABC))}
source('VItwoPartitions.r')
for (result in results) {
print("Result")
print(sprintf("Gibbs ESS: %f",effectiveSize(as.vector(result$gibbs$entropies))))
print(sprintf("Gibbs VI: %f",VItwoPartitions(result$sample$clustLabels,result$gibbs$bestPartition$cl)))
print(sprintf("Collapsed gibbs ESS: %f",effectiveSize(as.vector(result$cGibbs$entropies))))
print(sprintf("Collapsed gibbs VI: %f",VItwoPartitions(result$sample$clustLabels,result$cGibbs$bestPartition$cl)))
print(sprintf("MCMC-ABC ESS: %f",effectiveSize(as.vector(result$ABC$entropies))))
print(sprintf("MCMC-ABC VI: %f",VItwoPartitions(result$sample$clustLabels,result$ABC$bestPartition$cl)))
}
save(results,file="compOne.Rdata")
# end
stopCluster(cl)
# Reload data
load("compOne.Rdata")
source("~/GitHub/Model-based-clustering/plotVIoutput.R", echo=TRUE)
source('VItwoPartitions.r')
source('VItwoPartitions.r')
library(coda)
for (result in results) {
vis$dist[i] <- VItwoPartitions(result$sample$clustLabels,result$gibbs$bestPartition$cl)
vis$ESS[i] <- effectiveSize(as.vector(result$gibbs$entropies))
# times 60 to convert to secs, times 0.75 to account for 25% burnin
vis$time[i] <- 45*result$gibbs$time/length(result$gibbs$entropies)
vis$dist[i+n] <- VItwoPartitions(result$sample$clustLabels,result$cGibbs$bestPartition$cl)
vis$ESS[i+n] <- effectiveSize(as.vector(result$cGibbs$entropies))
vis$time[i+n] <- 45*result$cGibbs$time/length(result$cGibbs$entropies)
vis$dist[i+2*n] <- VItwoPartitions(result$sample$clustLabels,result$ABC$bestPartition$cl)
vis$ESS[i+2*n] <- effectiveSize(as.vector(result$ABC$entropies))
vis$time[i+2*n] <- 45*result$ABC$time/length(result$ABC$entropies)
i <- i+1
}
vis$ESS <- log(vis$ESS)
library(ggplot2)
# summarise
ggplot(vis,aes(type,dist))+geom_boxplot(aes(color=type))+labs(x='algorithm',y='VI distance',title='Comparison of VI distances')+theme(legend.position='none')
ggplot(vis,aes(type,ESS))+geom_boxplot(aes(color=type))+labs(x='Sampler type',y='log(ESS)',title='Comparison of ESS')+theme(legend.position='none')
ggplot(vis,aes(type,time))+geom_boxplot(aes(color=type))+labs(x='Sampler type',y='Average time (secs) per iteration',title='Comparison of time per iteration')+theme(legend.position='none')
N <- 1000
numOfSamples <- 20
# adjust
skip <- 30 #already processed samples
# Create samples
results <- c(results[1:skip],sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'gibbs'='','cGibbs'='','ABC'=''))}))
source('createSample.r')
# Create samples
results <- c(results[1:skip],sapply(1:numOfSamples,function(samNum){list('res'=list('sample'=gaussian2Sample(N),'gibbs'='','cGibbs'='','ABC'=''))}))
sapply(1:50,function(i) {typeof(results[i]$res$gibbs)})
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(numOfSamples+skip), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$gibbs <- gibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$gibbs <- c(results[sampleNum]$res$gibbs,'time'=end-start)
results[sampleNum]
})
library(doParallel)
# set-up
cl <- makeCluster(3)
registerDoParallel(cl)
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(numOfSamples+skip), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$gibbs <- gibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$gibbs <- c(results[sampleNum]$res$gibbs,'time'=end-start)
results[sampleNum]
})
source('gibbsNIG.r')
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(numOfSamples+skip), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$gibbs <- gibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$gibbs <- c(results[sampleNum]$res$gibbs,'time'=end-start)
results[sampleNum]
})
timestamp()
##------ Mon Mar 13 23:27:21 2023 ------##
save(results,file="compOne.Rdata")
# end
stopCluster(cl)
source('gibbsNIG.r')
numOfSamples <- 20
# adjust
skip <- 30 #already processed samples
# Reload data
load("compOne.Rdata")
sapply(1:50,function(i){typeof(results[i]$res$gibbs)})
sapply(1:50,function(i){typeof(results[i]$res$cGibbs)})
# Run Collapsed Gibbs
breakP <- 9
timestamp()
##------ Tue Mar 14 21:46:40 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(breakP+skip), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$cGibbs <- collapsedGibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$cGibbs <- c(results[sampleNum]$res$cGibbs,'time'=end-start)
results[sampleNum]
},results[(breakP+skip+1):(skip+numOfSamples)])
library(doParallel)
# set-up
cl <- makeCluster(3)
registerDoParallel(cl)
timestamp()
##------ Tue Mar 14 21:46:51 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(breakP+skip), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$cGibbs <- collapsedGibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$cGibbs <- c(results[sampleNum]$res$cGibbs,'time'=end-start)
results[sampleNum]
},results[(breakP+skip+1):(skip+numOfSamples)])
source('collapsedGibbsNIG.r')
timestamp()
##------ Tue Mar 14 21:47:06 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(breakP+skip), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$cGibbs <- collapsedGibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$cGibbs <- c(results[sampleNum]$res$cGibbs,'time'=end-start)
results[sampleNum]
},results[(breakP+skip+1):(skip+numOfSamples)])
timestamp()
##------ Tue Mar 14 23:15:39 2023 ------##
sapply(1:50,function(i){typeof(results[i]$res$cGibbs)})
save(results,file="compOne.Rdata")
# end
stopCluster(cl)
library(doParallel)
# set-up
cl <- makeCluster(3)
registerDoParallel(cl)
source('collapsedGibbsNIG.r')
save(results,file="compOne.Rdata")
# Reload data
load("compOne.Rdata")
sapply(1:50,function(i){typeof(results[i]$res$cGibbs)})
sapply(1:39,function(i){typeof(results[i]$res$cGibbs)})
sapply(40:50,function(i){typeof(results[i]$res$cGibbs)})
numOfSamples <- 11
# adjust
skip <- 39 #already processed samples
timestamp()
##------ Wed Mar 15 11:06:35 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(numOfSamples), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$cGibbs <- collapsedGibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$cGibbs <- c(results[sampleNum]$res$cGibbs,'time'=end-start)
results[sampleNum]
})
40:11
sapply(40:50,function(i){typeof(results[i]$res$cGibbs)})
sapply(1:39,function(i){typeof(results[i]$res$cGibbs)})
timestamp()
##------ Wed Mar 15 16:17:31 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(skip+numOfSamples), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$cGibbs <- collapsedGibbsNIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$cGibbs <- c(results[sampleNum]$res$cGibbs,'time'=end-start)
results[sampleNum]
})
timestamp()
##------ Wed Mar 15 18:01:03 2023 ------##
sapply(40:50,function(i){typeof(results[i]$res$cGibbs)})
save(results,file="compOne.Rdata")
sapply(1:50,function(i){typeof(results[i]$res$ABC)})
sapply(1:30,function(i){typeof(results[i]$res$ABC)})
sapply(31:50,function(i){typeof(results[i]$res$ABC)})
numOfSamples <- 20
# adjust
skip <- 30 #already processed samples
# Create break point
breakP <- floor(numOfSamples/2)
1:skip
(skip+1):(skip+breakP)
(skip+breakP+1):(numOfSamples+skip)
timestamp()
##------ Wed Mar 15 18:54:22 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(skip+breakP), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$ABC <- MCMC_ABC_NIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$ABC <- c(results[sampleNum]$res$ABC,'time'=end-start)
results[sampleNum]
},results[(skip+breakP+1):(numOfSamples+skip)])
source('MCMC_ABC.r')
timestamp()
##------ Wed Mar 15 18:54:36 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(skip+breakP), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$ABC <- MCMC_ABC_NIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$ABC <- c(results[sampleNum]$res$ABC,'time'=end-start)
results[sampleNum]
},results[(skip+breakP+1):(numOfSamples+skip)])
breakP <- 9
1:skip
(skip+1):(skip+breakP)
(skip+breakP+1):(numOfSamples+skip)
timestamp()
##------ Wed Mar 15 18:55:27 2023 ------##
results <- c(results[1:skip],foreach(sampleNum = (skip+1):(skip+breakP), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$ABC <- MCMC_ABC_NIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$ABC <- c(results[sampleNum]$res$ABC,'time'=end-start)
results[sampleNum]
},results[(skip+breakP+1):(numOfSamples+skip)])
timestamp()
##------ Wed Mar 15 19:40:41 2023 ------##
sapply(31:50,function(i){typeof(results[i]$res$ABC)})
sapply(39:50,function(i){typeof(results[i]$res$ABC)})
skip <- 9
skip <- 39
numOfSamples <- 11
breakP <- 0
save(results,file="compOne.Rdata")
skip+breakP
(skip+breakP+1):(skip+breakP+numOfSamples)
timestamp()
##------ Wed Mar 15 19:59:18 2023 ------##
results <- c(results[1:(skip+breakP)],foreach(sampleNum = (skip+breakP+1):(skip+breakP+numOfSamples), .packages = c('coda','nimble','gtools','wiqid','mcclust.ext'), .combine=c) %dopar% {
start <- Sys.time()
results[sampleNum]$res$ABC <- MCMC_ABC_NIG(results[sampleNum]$res$sample)
end <- Sys.time()
results[sampleNum]$res$ABC <- c(results[sampleNum]$res$ABC,'time'=end-start)
results[sampleNum]
})
timestamp()
##------ Wed Mar 15 21:59:25 2023 ------##
sapply(1:50,function(i){typeof(results[i]$res$ABC)})
sapply(1:50,function(i){typeof(results[i]$res$cGibbs)})
sapply(1:50,function(i){typeof(results[i]$res$gibbs)})
save(results,file="compOne.Rdata")
# end
stopCluster(cl)
source('VItwoPartitions.r')
library(coda)
source("~/GitHub/Model-based-clustering/plotVIoutput.R", echo=TRUE)
head(vis)
library(dplyr)
# show selection
samps <- c(1:5)
subData <- filter(vis,sample %in% samps)
ggplot(subData,aes(sample))+geom_bar(aes(weight=dist,fill=type),position='dodge')+labs(y='VI distance from true partition',title='Comparison of gibbs and collapsed gibbs samplers \n in approximating the true partition of 6 random samples')
seq(1,20,5)
1:5
# show 5 at a time
for (start in seq(1,n,5)) {
subData <- filter(vis,sample %in% c(start:(start+4)))
ggplot(subData,aes(sample))+geom_bar(aes(weight=dist,fill=type),position='dodge')+labs(y='VI distance from true partition',title='Comparison of gibbs and collapsed gibbs samplers \n in approximating the true partition of 6 random samples')
}
ggplot(subData,aes(sample))+geom_bar(aes(weight=dist,fill=type),position='dodge')+labs(y='VI distance from true partition',title='Comparison of gibbs and collapsed gibbs samplers \n in approximating the true partition of 6 random samples')
# show 5 at a time
for (start in seq(1,n,5)) {
subData <- filter(vis,sample %in% c(start:(start+4)))
ggplot(subData,aes(sample))+geom_bar(aes(weight=dist,fill=type),position='dodge')+labs(y='VI distance from true partition',title='Comparison of gibbs and collapsed gibbs samplers \n in approximating the true partition of 5 random samples')
}
